{"version":3,"file":"static/js/690.2dbe354c.chunk.js","mappings":"sLACaA,E,QAAqBC,GAAAA,KAAH,qW,oLCOxB,SAASC,IAEZ,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,mCAAG,WAAMC,GAAN,gFACjBA,EAAMC,iBACAC,EAAW,CAEbC,MAAOH,EAAMI,cAAcC,SAASC,UAAUC,MAC9CC,SAAUR,EAAMI,cAAcC,SAASI,aAAaF,OALvC,kBASUV,GAASa,EAAAA,EAAAA,IAAaR,IAAWS,SAT3C,OASPC,EATO,OAUbC,EAAAA,GAAAA,QAAA,eAAsBD,EAASE,KAAKC,KAApC,2BAVa,gDAaN,wCAAJ,KACCF,EAAAA,GAAAA,MAAA,wBAGAA,EAAAA,GAAAA,MAAA,kCAjBS,yDAAH,sDAsBlB,OACQ,6BACK,mCACL,UAAC,IAAD,CAAoBG,SAAUjB,EAA9B,WACI,SAACkB,EAAA,EAAD,CAAYC,WAAS,EAACC,MAAM,QAAQC,QAAQ,WAAWC,UAAQ,EAAEC,KAAK,QAAQP,KAAK,YAAYQ,YAAY,yBAC3G,SAACN,EAAA,EAAD,CAAYC,WAAS,EAACC,MAAM,WAAWC,QAAQ,WAAWC,UAAQ,EAACG,UAAW,EAAIF,KAAK,WAAWP,KAAK,kBACvG,SAACU,EAAA,EAAD,CAAQH,KAAK,SAASF,QAAQ,YAA9B,0BAIf,C,wBCzBD,MAZC,WACC,IAAMM,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,GAAWC,EAAAA,EAAAA,MAMjB,OALAC,EAAAA,EAAAA,YAAU,WACJL,GAEJG,EAAS,YACV,GAAC,CAAEH,EAAWG,KAEb,SAACjC,EAAD,GAEH,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login.js"],"sourcesContent":["import styled from \"styled-components\";\nexport const RegisterFormStyled = styled.form`\nmargin-top: 20px;\ndisplay: flex;\nflex-direction: column;\nrow-gap: 20px;\npadding: 20px;\nmax-width: 500px;\nmargin-left: auto;\nmargin-right: auto;\nborder:1px solid gray;\nborder-radius: 4px;\n& button{\n    margin-left: auto;\n    margin-right: auto;\n    padding-left: 25px;\n    padding-right: 25px;\n    max-width: 200px;\n}\n`","import { useDispatch} from \"react-redux\";\nimport { requestLogin} from \"../../redux/user/operations\";\nimport { toast } from \"react-toastify\";\nimport { RegisterFormStyled } from \"../RegisterForm/RegisterForm.styled\";\n\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nexport function LoginForm(){\n\n    const dispatch = useDispatch();\n    const handleSubmit = async(event)=>{\n        event.preventDefault();\n        const formData = {\n           \n            email: event.currentTarget.elements.userEmail.value,\n            password: event.currentTarget.elements.userPassword.value,\n        }\n        \n        try{\n            const responce = await dispatch(requestLogin(formData)).unwrap();\n            toast.success(`User ${responce.user.name} successfully entered!`)\n        }\n        catch(e){\n            if(e===\"Request failed with status code 400\") {\n                toast.error(`No such user exists.`);\n            }\n            else{\n                toast.error(`Ooops.....Something went wrong`);\n            }\n            \n        }\n    }\n    return (\n            <main>\n                 <h2>Login</h2>\n            <RegisterFormStyled onSubmit={handleSubmit} >\n                <TextField  fullWidth label=\"Email\" variant=\"standard\" required  type=\"email\" name=\"userEmail\" placeholder=\"OlegKunak@gmail.com\"/>\n                <TextField  fullWidth label=\"Password\" variant=\"standard\" required minLength={6}  type=\"password\" name=\"userPassword\" />\n                <Button type=\"submit\" variant=\"contained\">Sign In</Button>\n            </RegisterFormStyled>\n            </main>\n    );\n}\n\n","import { useEffect } from 'react';\nimport { LoginForm } from '../components/LoginForm/LoginForm';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from '../redux/user/selectors';\nimport { useNavigate } from 'react-router-dom';\n\n function Login() {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const navigate = useNavigate();\n  useEffect(()=>{\n    if(!isLoggedIn) return;\n    \n    navigate('/contacts');\n  },[ isLoggedIn,navigate])\n  return (\n    <LoginForm/>\n  );\n}\nexport default Login;"],"names":["RegisterFormStyled","styled","LoginForm","dispatch","useDispatch","handleSubmit","event","preventDefault","formData","email","currentTarget","elements","userEmail","value","password","userPassword","requestLogin","unwrap","responce","toast","user","name","onSubmit","TextField","fullWidth","label","variant","required","type","placeholder","minLength","Button","isLoggedIn","useSelector","selectIsLoggedIn","navigate","useNavigate","useEffect"],"sourceRoot":""}