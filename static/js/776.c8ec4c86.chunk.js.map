{"version":3,"file":"static/js/776.c8ec4c86.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ItemContactList/ItemContactList.jsx","components/ContactList/ContactList.jsx","components/Filter.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\nexport const selectContactsStatus = state => state.contacts.status;\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectFilter = state => state.filter;\nexport const selectVisibleContacts = createSelector(\n    [selectFilter, selectContacts],\n    (filter, contacts) => {\n        if (filter.trim() === \"\") return contacts;\n        return contacts.filter((contact) => { return contact.name.toLowerCase().includes(filter.toLowerCase()) });\n    })","import TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nimport React from \"react\";\nimport { useDispatch} from \"react-redux\";\nimport { requestAddContact } from \"../../redux/contacts/operations\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/contacts/selectors';\nexport function ContactForm() {\n    const contacts = useSelector(selectContacts);\n    const dispatch = useDispatch();\n    const handleSubmit =async (event) => {\n        event.preventDefault();\n        const name =  event.currentTarget.elements.name.value;\n        const number =  event.currentTarget.elements.number.value;\n\n        const existContact = contacts.find((contactApp) => { return contactApp.name === name });\n        if (existContact !== undefined) {\n            toast.error(`This contact is already exist.`);\n            return;\n        }\n        try{\n            await dispatch(requestAddContact({name,number})).unwrap();\n            toast.success(`The contact was successfully added!`)\n        }\n        catch(e){\n                toast.error(`Ooops.....Something went wrong`);\n            \n        }\n\n        event.target.reset();\n   }\n\n    return (\n        <form  onSubmit={handleSubmit}>\n             <TextField  fullWidth label=\"Name\" variant=\"standard\" \n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required />\n             <TextField  fullWidth label=\"Email\" variant=\"standard\" \n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required/>\n              <Button style={{width:'200px',margin:'20px auto 0 auto',display:'block'}} type=\"submit\" variant=\"contained\">Add contact</Button>\n        </form>\n    );\n}\n","import ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Divider from '@mui/material/Divider';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from '@mui/material/IconButton';\n\nexport function ItemContactForm(props) {\n    return (\n    <>\n        <ListItem>\n         <ListItemText  primary={`${props.contact.name}`} />\n         <ListItemText  primary={`${props.contact.number}`} />\n         <IconButton onClick={props.handleDelete} aria-label=\"delete\">\n        <DeleteIcon  /></IconButton>\n       </ListItem>\n       <Divider />\n       </>\n        \n    );\n}","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {selectContactsStatus,selectContacts} from '../../redux/contacts/selectors'\nimport { useEffect } from \"react\";\nimport { requestDeleteContact, requestUserContacts } from \"../../redux/contacts/operations\";\nimport { selectIsLoggedIn } from \"../../redux/user/selectors\";\nimport { toast } from \"react-toastify\";\nimport { ItemContactForm } from \"../ItemContactList/ItemContactList\";\nimport { selectVisibleContacts } from \"../../redux/contacts/selectors\";\n\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport List from '@mui/material/List';\nexport function ContactList(){\n\n    const isLoggedIn = useSelector(selectIsLoggedIn)\n    const dispatch  = useDispatch();\n    const status = useSelector(selectContactsStatus);\n    const contacts = useSelector(selectContacts);\n    const visibleContacts = useSelector(selectVisibleContacts) ;\n    const handleDeleteContact=async(contactID)=>{\n      try{\n        await dispatch(requestDeleteContact(contactID)).unwrap();\n        toast.success(`The contact was deleted`)\n    }\n    catch(e){\n            toast.error(`Ooops.....Something went wrong`);\n        \n    }    \n    }\n    useEffect(()=>{\n        if(!isLoggedIn) return;\n        dispatch(requestUserContacts());\n      },[dispatch,isLoggedIn])\n    return (\n        <>\n        {status===\"pending\"&& <CircularProgress style={{margin:\"10px auto 10px auto\",width:'50px',display:'block'}} />\n   }\n        {status===\"resolved\"\n        && contacts!==null\n        &&\n        <List>\n            {visibleContacts.map(contact=>{\n                return <ItemContactForm key={contact.id} contact={contact} handleDelete={()=>{ handleDeleteContact(contact.id)}}></ItemContactForm>\n            })}\n        </List>\n        }\n        </>\n      \n    );\n}","import { selectFilter } from '../redux/contacts/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from '../redux/filter/filterSlice';\nimport { TextField } from '@mui/material';\nexport function Filter() {\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch()\n    return (\n        <div className=\"contacts-finder\">\n            <TextField  fullWidth label=\"Find contacts by name\" variant=\"standard\" name=\"filter\" type=\"text\" value={filter} onChange={(event)=>{dispatch(setFilter(event.target.value))}} />\n        </div>\n    );\n}\n","import styled from \"styled-components\";\nexport const ContactsStyled= styled.div`\n& h1{\n    text-align: center;\n}\nmax-width:500px ;\n margin-left:auto;\n margin-right: auto;\n\n`","import React from \"react\";\nimport { ContactForm } from \"../../components/ContactForm/ContactForm\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { ContactList } from \"../../components/ContactList/ContactList\";\nimport { Filter } from \"../../components/Filter\";\nimport { ContactsStyled } from \"./Contacts.styled\";\n\n\nfunction Contacts(){\n    return (\n      <main>\n        <ContactsStyled>\n          <h1>Phonebook</h1>\n          <ContactForm/>\n          <h2>Contacts</h2>\n          <Filter/>\n          <ContactList/>\n        </ContactsStyled>\n      </main>\n   \n   \n  \n    );\n}\nexport default withAuthRedirect(Contacts,'/login') ;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from '../redux/user/selectors';\nimport { Navigate } from 'react-router-dom';\n\n\nexport const withAuthRedirect = (Component,redirectTo)=>{\n    const ComponentWithRedirect =(props) =>\n    {   const isLoggedIn = useSelector(selectIsLoggedIn);\n       \n       return isLoggedIn? <Component {...props}/>:<Navigate to={redirectTo}></Navigate>;\n    }\n   \n    return ComponentWithRedirect;\n}\n"],"names":["selectContactsStatus","state","contacts","status","selectContacts","selectFilter","filter","selectVisibleContacts","createSelector","trim","contact","name","toLowerCase","includes","ContactForm","useSelector","dispatch","useDispatch","handleSubmit","event","preventDefault","currentTarget","elements","value","number","undefined","find","contactApp","toast","requestAddContact","unwrap","target","reset","onSubmit","TextField","fullWidth","label","variant","type","pattern","title","required","Button","style","width","margin","display","ItemContactForm","props","ListItem","ListItemText","primary","IconButton","onClick","handleDelete","Delete","Divider","ContactList","isLoggedIn","selectIsLoggedIn","visibleContacts","handleDeleteContact","contactID","requestDeleteContact","useEffect","requestUserContacts","CircularProgress","List","map","id","Filter","className","onChange","setFilter","ContactsStyled","styled","Component","redirectTo","to"],"sourceRoot":""}